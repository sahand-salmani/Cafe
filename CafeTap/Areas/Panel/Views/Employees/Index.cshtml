@model DataAccess.Pagination.PaginatedList<Employee>;
@{
    Layout = "_Layout";
    ViewData["Title"] = "Position list";
    ViewData["MainTitle"] = "Positions";
    ViewData["SubTitle"] = "List";
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    int counter = 1;
    int modalCounter = 1;
}
<!-- Complex headers with sorting -->
<div class="card">
    <div class="card-header header-elements-inline">
        <h5 class="card-title">Complex headers with sorting</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
                <a class="list-icons-item" data-action="reload"></a>
                <a class="list-icons-item" data-action="remove"></a>
            </div>
        </div>
    </div>

    <div class="card-body">
        Complex headers (using colspan / rowspan) can be used to <code>group</code> columns of similar information in DataTables, creating a very powerful visual effect. In addition to the basic behaviour, DataTables can also take <code>colspan</code> and <code>rowspans</code> into account when working with hidden columns. The example below shows a header spanning multiple cells over the contact information with sorting, with one of the columns that the span covers being hidden.
    </div>

    <table class="table table-bordered datatable-complex-header">
        <thead>
            <tr>
                <th rowspan="2">Name</th>
                <th colspan="2">HR Information</th>
                <th colspan="2">Contact</th>
                <th colspan="1">Actions</th>
            </tr>
            <tr>
                <th>Position</th>
                <th>Salary</th>
                <th>Phone</th>
                <th>Address</th>
                <th>Edit</th>
                <th>Remove</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in Model)
            {
                <tr>
                    <td><strong class="h5">@emp.FullName</strong></td>
                    <td>@emp.Position.Name</td>
                    <td>@emp.Salary</td>
                    <td>@emp.PhoneNumber</td>
                    <td>@emp.Address</td>
                    <td><a asp-action="Update" asp-route-id="@emp.Id" class="btn bg-blue ml-3">Edit<i class="icon-pencil3 ml-2"></i></a></td>
                    <td><a class="btn bg-danger ml-3" data-toggle="modal" data-target="#modal_theme_danger-@counter" class="dropdown-item">Remove<i class="icon-eraser3 ml-2"></i></a></td>
                </tr>
            }
        </tbody>
    </table>
</div>
<!-- /complex headers with sorting -->
<!-- /content area -->



@foreach (var employee in Model)
{
    <div id="modal_theme_danger-@modalCounter" class="modal fade" tabindex="-1">
        @{
            modalCounter += 1;
        }
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger">
                    <h6 class="modal-title">Deleting position @employee.FullName</h6>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <div class="modal-body">
                    <h6 class="font-weight-semibold">Important Note!!!</h6>
                    <p>You are about to delete role : @employee.FullName. You can not delete this position as long as you have users who posses this role. If you want to delete this role you have to remove all users from this role first. </p>

                    <hr>

                    <h6 class="font-weight-semibold">Related data information</h6>
                    <p>Will add related data to this part later</p>
                </div>

                <div class="modal-footer">
                    <form asp-action="Delete" asp-controller="Employees" asp-area="Panel" asp-route-id="@employee.Id" method="post">
                        <button type="button" class="btn btn-link" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn bg-danger">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}


<ul class="pagination align-self-end">
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <td>
            @if (i != Model.PageIndex)
            {
                <li class="page-item active"><a asp-action="Index" asp-route-page="@i" class="page-link">@i</a></li>
            }
            else
            {
                <li class="page-item disabled"><a class="page-link">@i</a></li>
            }
        </td>
    }
</ul>