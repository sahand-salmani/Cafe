@model DataAccess.Pagination.PaginatedList<Stant>
@{
    Layout = "_Layout";
    ViewData["Title"] = "Stants list";
    ViewData["MainTitle"] = "Stants";
    ViewData["SubTitle"] = "List";
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    int counter = 1;
    int modalCounter = 1;

    var cultInfo = CultureInfo.GetCultureInfo("az-Latn-AZ");
}


<!-- search field -->
<div class="card">
    <div class="card-body">
        <h5 class="mb-3">Website search results</h5>

        <form asp-action="SearchByName" asp-route-page="1" asp-controller="Stants" asp-area="Panel" method="get">
            <div class="input-group mb-3">
                <div class="form-group-feedback form-group-feedback-left">
                    <input type="text" name="name" class="form-control form-control-lg" placeholder="Search">
                    <div class="form-control-feedback form-control-feedback-lg">
                        <i class="icon-search4 text-muted"></i>
                    </div>
                </div>

                <div class="input-group-append">
                    <button type="submit" class="btn btn-primary btn-lg">Search</button>
                </div>
            </div>

            <div class="d-md-flex align-items-md-center flex-md-wrap text-center text-md-left">
                <ul class="list-inline list-inline-condensed mb-0">
                    <li class="list-inline-item dropdown">
                        <a href="#" class="btn btn-link text-default dropdown-toggle" data-toggle="dropdown">
                            <i class="icon-stack2 mr-2"></i>
                            All categories
                        </a>

                        <div class="dropdown-menu">
                            <a href="#" class="dropdown-item"><i class="icon-question7"></i> Getting started</a>
                            <a href="#" class="dropdown-item"><i class="icon-accessibility"></i> Registration</a>
                            <a href="#" class="dropdown-item"><i class="icon-reading"></i> General info</a>
                            <a href="#" class="dropdown-item"><i class="icon-gear"></i> Your settings</a>
                            <a href="#" class="dropdown-item"><i class="icon-graduation"></i> Copyrights</a>
                            <div class="dropdown-divider"></div>
                            <a href="#" class="dropdown-item"><i class="icon-mail-read"></i> Contacting authors</a>
                        </div>
                    </li>
                    <li class="list-inline-item"><a href="#" class="btn btn-link text-default"><i class="icon-reload-alt mr-2"></i> Refine your search</a></li>
                </ul>

                <ul class="list-inline mb-0 ml-md-auto">
                    <li class="list-inline-item"><a href="#" class="btn btn-link text-default"><i class="icon-make-group mr-2"></i> Browse articles</a></li>
                    <li class="list-inline-item"><a href="#" class="btn btn-link text-default"><i class="icon-menu7 mr-2"></i> Advanced search</a></li>
                </ul>
            </div>
        </form>
    </div>
</div>
<!-- /search field -->
<!-- Bordered table -->
<div class="card">
    <div class="card-header header-elements-inline">
        <h5 class="card-title">Bordered table</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
                <a class="list-icons-item" data-action="reload"></a>
                <a class="list-icons-item" data-action="remove"></a>
            </div>
        </div>
    </div>

    <div class="card-body">
        The <code>DataTables</code> is a highly flexible tool, based upon the foundations of progressive enhancement, and will add advanced interaction controls to any HTML table. DataTables has most features enabled by default, so all you need to do to use it with your own tables is to call the construction function. Searching, ordering, paging etc goodness will be immediately added to the table, as shown in this example. <strong>Datatables support all available table styling.</strong>
    </div>

    <table class="table datatable-basic table-bordered">
        <thead>
            <tr>
                <th>No</th>
                <th>Restaurant Name</th>
                <th>Stant Count</th>
                <th>Payment</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                @if (Model.Count != 0)
                {
                    @for (int i = 0; i < Model.Count; i++)
                    {
                        <tr>
                            <td>@(i+1)</td>
                            <td>@Model[i].Restaurant.Name</td>
                            <td>@Model[i].Quantity</td>
                            <td>@Model[i].Price.ToString("C", cultInfo)</td>
                            <td class="text-center">
                                <div class="list-icons">
                                    <div class="dropdown">
                                        <a href="#" class="list-icons-item" data-toggle="dropdown">
                                            <i class="icon-menu9"></i>
                                        </a>

                                        <div class="dropdown-menu dropdown-menu-right">
                                            <a asp-controller="Stants" asp-action="Update" asp-route-id="@Model[i].Id" class="dropdown-item"><i class="icon-pencil"></i>Edit</a>
                                            <a data-toggle="modal" data-target="#modal_theme_danger-@counter" class="dropdown-item"><i class="icon-eraser3"></i>Delete</a>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                }
            }

        </tbody>
    </table>
</div>
<!-- /bordered table -->



@foreach (var stant in Model)
{
    <div id="modal_theme_danger-@modalCounter" class="modal fade" tabindex="-1">
        @{
            modalCounter += 1;
        }
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger">
                    <h6 class="modal-title">Deleting position @stant.Restaurant.Name</h6>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <div class="modal-footer">
                    <form asp-action="Delete" asp-controller="Stants" asp-area="Panel" asp-route-id="@stant.Id" method="post">
                        <button type="button" class="btn btn-link" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn bg-danger">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}


<ul class="pagination align-self-end">
    <li class="page-item @prevDisabled"><a href="#" class="page-link">&larr; &nbsp; Prev</a></li>
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <td>
            @if (i != Model.PageIndex)
            {
            <li class="page-item active"><a href="#" class="page-link">@i</a></li>
        }
        else
        {
            <li class="page-item disabled"><a href="#" class="page-link">@i</a></li>
        }
            </td>
        }
    <li class="page-item @nextDisabled"><a href="#" class="page-link">Next &nbsp; &rarr;</a></li>
</ul>
