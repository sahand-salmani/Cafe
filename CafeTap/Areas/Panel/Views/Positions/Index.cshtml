@model DataAccess.Pagination.PaginatedList<Position>
@{
    Layout = "_Layout";
    ViewData["Title"] = "Position list";
    ViewData["MainTitle"] = "Positions";
    ViewData["SubTitle"] = "List";
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    int counter = 1;
    int modalCounter = 1;
}
<partial name="_Validation" />
<partial name="_Messages" />


<div class="card">
    <div class="card-header header-elements-inline">
        <h5 class="card-title">Default ordering</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
                <a class="list-icons-item" data-action="reload"></a>
                <a class="list-icons-item" data-action="remove"></a>
            </div>
        </div>
    </div>

    <div class="card-body">
        With DataTables you can alter the ordering characteristics of the table at initialisation time. Using the <code>order</code> initialisation parameter, you can set the table to display the data in exactly the order that you want. The <code>order</code> parameter is an array of arrays where the first value of the inner array is the column to order on, and the second is <code>'asc'</code> or <code>'desc'</code> as required. The table below is ordered (descending) by the <code>DOB</code> column.
    </div>

    <table class="table datatable-sorting">
        <thead>
            <tr>
                <th>No</th>
                <th>Name</th>
                <th>Employee Count</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Any())
            {
                @for (var i = 0; i < Model.Count; i++)
                {
                    <tr>
                        <td>@(i+1)</td>
                        <td>@Model[i].Name</td>
                        @if (Model[i].Employees != null)
                        {
                            <td>@Model[i].Employees.Count</td>
                        }
                        else
                        {
                            <td>NA</td>
                        }
                        <td class="text-center">
                            <div class="list-icons">
                                <div class="dropdown">
                                    <a href="#" class="list-icons-item" data-toggle="dropdown">
                                        <i class="icon-menu9"></i>
                                    </a>

                                    <div class="dropdown-menu dropdown-menu-right">
                                        <a asp-controller="Positions" asp-action="Update" asp-route-id="@Model[i].Id" class="dropdown-item"><i class="icon-pencil"></i>Edit</a>
                                        <a data-toggle="modal" data-target="#modal_theme_danger-@counter" class="dropdown-item"><i class="icon-eraser3"></i>Delete</a>
                                        @{
                                            counter += 1;
                                        }
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
<!-- /default ordering -->


@foreach (var position in Model)
{
    <div id="modal_theme_danger-@modalCounter" class="modal fade" tabindex="-1">
        @{
            modalCounter += 1;
        }
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger">
                    <h6 class="modal-title">Deleting position @position.Name</h6>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <div class="modal-body">
                    <h6 class="font-weight-semibold">Important Note!!!</h6>
                    <p>You are about to delete role : @position.Name. You can not delete this position as long as you have users who posses this role. If you want to delete this role you have to remove all users from this role first. </p>

                    <hr>

                    <h6 class="font-weight-semibold">Related data information</h6>
                    <p>Will add related data to this part later</p>
                </div>

                <div class="modal-footer">
                    <form asp-action="Delete" asp-controller="Positions" asp-area="Panel" asp-route-id="@position.Id" method="post">
                        <button type="button" class="btn btn-link" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn bg-danger">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}


<ul class="pagination align-self-end">
    <li class="page-item @prevDisabled"><a href="#" class="page-link">&larr; &nbsp; Prev</a></li>
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <td>
            @if (i != Model.PageIndex)
            {
                <li class="page-item active"><a href="#" class="page-link">@i</a></li>
            }
            else
            {
                <li class="page-item disabled"><a href="#" class="page-link">@i</a></li>
            }
        </td>
    }
    <li class="page-item @nextDisabled"><a href="#" class="page-link">Next &nbsp; &rarr;</a></li>
</ul>
