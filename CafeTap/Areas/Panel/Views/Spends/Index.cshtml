@model DataAccess.Pagination.PaginatedList<Spend>
@{
    Layout = "_Layout";
    ViewData["Title"] = "Spends list";
    ViewData["MainTitle"] = "Spends";
    ViewData["SubTitle"] = "List";
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    int counter = 1;
    int modalCounter = 1;
    var cultInfo = CultureInfo.GetCultureInfo("az-Latn-AZ");
}

<!-- Bordered table -->
<div class="card">
    <div class="card-header header-elements-inline">
        <h5 class="card-title">Bordered table</h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
                <a class="list-icons-item" data-action="reload"></a>
                <a class="list-icons-item" data-action="remove"></a>
            </div>
        </div>
    </div>

    <div class="card-body">
        The <code>DataTables</code> is a highly flexible tool, based upon the foundations of progressive enhancement, and will add advanced interaction controls to any HTML table. DataTables has most features enabled by default, so all you need to do to use it with your own tables is to call the construction function. Searching, ordering, paging etc goodness will be immediately added to the table, as shown in this example. <strong>Datatables support all available table styling.</strong>
    </div>

    <table class="table datatable-basic table-bordered">
        <thead>
            <tr>
                <th>No</th>
                <th>Name</th>
                <th>Amount</th>
                <th>Spend At</th>
                <th>Note</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                @if (Model.Count != 0)
                {
                    @for (int i = 0; i < Model.Count; i++)
                    {
                        <tr>
                            <td>@(i+1)</td>
                            <td>@Model[i].Name</td>
                            <td>@Model[i].Amount.ToString("C",cultInfo)</td>
                            <td>@Model[i].SpentAt.ToString("dd-MMM-yyyy", cultInfo)</td>
                            <td>@Model[i].Note</td>
                            <td class="text-center">
                                <div class="list-icons">
                                    <div class="dropdown">
                                        <a href="#" class="list-icons-item" data-toggle="dropdown">
                                            <i class="icon-menu9"></i>
                                        </a>

                                        <div class="dropdown-menu dropdown-menu-right">
                                            <a asp-controller="Spends" asp-action="Update" asp-route-id="@Model[i].Id" class="dropdown-item"><i class="icon-pencil"></i>Edit</a>
                                            <a data-toggle="modal" data-target="#modal_theme_danger-@counter" class="dropdown-item"><i class="icon-eraser3"></i>Delete</a>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                }
            }

        </tbody>
    </table>
</div>
<!-- /bordered table -->



@foreach (var spend in Model)
{
    <div id="modal_theme_danger-@modalCounter" class="modal fade" tabindex="-1">
        @{
            modalCounter += 1;
        }
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger">
                    <h6 class="modal-title">Deleting position @spend.Name</h6>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <div class="modal-body">
                    <h6 class="font-weight-semibold">Important Note!!!</h6>
                    <p>You are about to delete role : @spend.Name. You can not delete this position as long as you have users who posses this role. If you want to delete this role you have to remove all users from this role first. </p>

                    <hr>

                    <h6 class="font-weight-semibold">Related data information</h6>
                    <p>Will add related data to this part later</p>
                </div>

                <div class="modal-footer">
                    <form asp-action="Delete" asp-controller="Spends" asp-area="Panel" asp-route-id="@spend.Id" method="post">
                        <button type="button" class="btn btn-link" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn bg-danger">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}


<ul class="pagination align-self-end">
    <li class="page-item @prevDisabled"><a href="#" class="page-link">&larr; &nbsp; Prev</a></li>
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <td>
            @if (i != Model.PageIndex)
            {
            <li class="page-item active"><a href="#" class="page-link">@i</a></li>
        }
        else
        {
            <li class="page-item disabled"><a href="#" class="page-link">@i</a></li>
        }
            </td>
        }
    <li class="page-item @nextDisabled"><a href="#" class="page-link">Next &nbsp; &rarr;</a></li>
</ul>
